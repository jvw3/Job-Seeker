# Generated by Django 4.1.3 on 2022-12-05 22:19

from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Board',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.TextField()),
                ('goal', models.TextField()),
                ('requirements', models.TextField()),
            ],
        ),
        migrations.CreateModel(
            name='BoardJob',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('has_interviewed', models.BooleanField()),
                ('interview_rounds', models.IntegerField()),
                ('salary_rating', models.PositiveIntegerField(default=0, validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(10)])),
                ('location_rating', models.PositiveIntegerField(default=0, validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(10)])),
                ('culture_rating', models.PositiveIntegerField(default=0, validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(10)])),
                ('leadership_rating', models.PositiveIntegerField(default=0, validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(10)])),
                ('team_rating', models.PositiveIntegerField(default=0, validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(10)])),
                ('job_score', models.IntegerField()),
            ],
        ),
        migrations.CreateModel(
            name='Category',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.TextField(max_length=30)),
            ],
        ),
        migrations.CreateModel(
            name='Company',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.TextField(max_length=50)),
            ],
        ),
        migrations.CreateModel(
            name='Interview',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateTimeField()),
                ('is_complete', models.BooleanField()),
                ('interview_feedback', models.TextField(max_length=10000)),
                ('board_job', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='jobseekerapi.boardjob')),
            ],
        ),
        migrations.CreateModel(
            name='Job',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.TextField(max_length=100)),
            ],
        ),
        migrations.CreateModel(
            name='Question',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('content', models.TextField(max_length=300)),
            ],
        ),
        migrations.CreateModel(
            name='Seeker',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('bio', models.TextField()),
                ('current_role', models.TextField()),
                ('is_admin', models.BooleanField()),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='PriorityRank',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('salary', models.PositiveIntegerField(default=0, validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(5)])),
                ('location', models.PositiveIntegerField(default=0, validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(5)])),
                ('culture', models.PositiveIntegerField(default=0, validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(5)])),
                ('leadership', models.PositiveIntegerField(default=0, validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(5)])),
                ('team', models.PositiveIntegerField(default=0, validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(5)])),
                ('board', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='jobseekerapi.board')),
            ],
        ),
        migrations.CreateModel(
            name='PrepQuestion',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('prep', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='jobseekerapi.interview')),
                ('question', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='jobseekerapi.question')),
            ],
        ),
        migrations.CreateModel(
            name='InterviewPrep',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('company_info', models.TextField(max_length=5000)),
                ('elevator_pitch', models.TextField(max_length=500)),
                ('seeker', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='jobseekerapi.seeker')),
            ],
        ),
        migrations.CreateModel(
            name='CustomPrepInfo',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.TextField(max_length=50)),
                ('description', models.TextField(max_length=300)),
                ('content', models.TextField(max_length=10000)),
                ('prep', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='jobseekerapi.interviewprep')),
            ],
        ),
        migrations.AddField(
            model_name='boardjob',
            name='company',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='jobseekerapi.company'),
        ),
        migrations.AddField(
            model_name='boardjob',
            name='job',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='jobseekerapi.job'),
        ),
        migrations.AddField(
            model_name='boardjob',
            name='prep',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='jobseekerapi.interviewprep'),
        ),
        migrations.CreateModel(
            name='BoardCategory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('board', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='jobseekerapi.board')),
                ('category', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='jobseekerapi.category')),
            ],
        ),
        migrations.AddField(
            model_name='board',
            name='seeker',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='jobseekerapi.seeker'),
        ),
    ]
